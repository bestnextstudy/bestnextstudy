rm(list = ls())
####SET DIRECTORY
setwd("/Users/kyuhonghan/Dropbox/Research/Customer Satisfaction Meta Analysis Study Design/Online Tool")
###FUNCTIONS
source("EFFICIENCY_FUNCTIONS.R")



####READ DATA
data = read.csv("/Users/kyuhonghan/Dropbox/Research/Customer Satisfaction Meta Analysis Study Design/Online Tool/Efficiency_Best_Next_Studies_Sample_Data_081522.csv",
                colClasses = c("integer", "factor", "factor", "factor", "factor", "factor", "factor", "numeric"))
###REORDER FACTOR LEVELS
data$Exchange <- factor(data$Exchange, levels = c("Goods", "Services", "Mixed"))
data$Market <- factor(data$Market, levels = c("B2C", "B2B", "Mixed"))
data$Location <- factor(data$Location, levels = c("North America", "Europe", "Asia"))
data$CS_Scale_Items <- factor(data$CS_Scale_Items, levels = c("Single Item", "Multiple Items"))
data$CS_Scale_Points <- factor(data$CS_Scale_Points, levels = c("5", "7", "10"))



####ANALYSIS
###EFFICIENCIES FOR ALL STUDIES
##INPUTS TO THE FUNCTION efficiency
variables =  c("Exchange", "Market", "Location", "CS_Scale_Items", "CS_Scale_Points", "Retention_Measure")
labels = c("Exchange", "Market", "Location", "CS_Scale_Items", "CS_Scale_Points", "Retention_Measure")
corrvar = "Corr"
##RUN
eff = efficiency(data = data, variables = variables, labels = labels, corrvar = corrvar)
eff

###TRUE & OPTIMAL EFFICIENCY OVER TIME
##INPUTS TO THE FUNCTION efficiency_over_time
variables =  c("Exchange", "Market", "Location", "CS_Scale_Items", "CS_Scale_Points", "Retention_Measure")
labels = c("Exchange", "Market", "Location", "CS_Scale_Items", "CS_Scale_Points", "Retention_Measure")
corrvar = "Corr"
naval = "Don't Know"
yrvar = "Year"
# yrs = sort(unique(data$Year))[-c(1:3)]
yrs = c(2005, 2008, 2011, 2014, 2017, 2021)
##RUN
eff_over_time = efficiency_over_time(data = data, variables = variables, labels = labels, corrvar = corrvar, naval = naval, yrvar = yrvar, yrs = yrs)
eff_by_yr_true = as.data.frame(eff_over_time$eff_by_yr_true) #true efficiency
eff_by_yr_opt = as.data.frame(eff_over_time$eff_by_yr_opt)   #optimal efficiency
##PLOT
require(ggplot2)
#STACK DATA
eff_ov_time_true_a = cbind(eff_by_yr_true[c("End Year", "A-Efficiency")], "A-Efficiency: True")
eff_ov_time_true_d = cbind(eff_by_yr_true[c("End Year", "D-Efficiency")], "D-Efficiency: True")
eff_ov_time_opt_a = cbind(eff_by_yr_opt[c("End Year", "A-Efficiency")], "A-Efficiency: Optimal")
eff_ov_time_opt_d = cbind(eff_by_yr_opt[c("End Year", "D-Efficiency")], "D-Efficiency: Optimal")
colnames(eff_ov_time_true_a) = colnames(eff_ov_time_true_d) = colnames(eff_ov_time_opt_a) = colnames(eff_ov_time_opt_d) =
  c("End Year", "Efficiency", "Label")
eff_ov_time = rbind(eff_ov_time_true_a, eff_ov_time_opt_a[2:nrow(eff_ov_time_opt_a), ], eff_ov_time_true_d, eff_ov_time_opt_d[2:nrow(eff_ov_time_opt_d), ])
#PLOT
ggplot(eff_ov_time, aes(x = `End Year`, y = Efficiency,
                        linetype = factor(Label), shape = factor(Label))) +
  geom_line() +
  geom_point() +
  geom_text(aes(label = round(Efficiency,2)), size = 3, vjust = -1) +
  scale_linetype_manual("",
                        values = c("solid", "longdash", "solid", "longdash"),
                        breaks = c("A-Efficiency: True", "A-Efficiency: Optimal", "D-Efficiency: True", "D-Efficiency: Optimal")) +
  scale_shape_manual("",
                     values = c(15, 15, 17, 17),
                     breaks = c("A-Efficiency: True", "A-Efficiency: Optimal", "D-Efficiency: True", "D-Efficiency: Optimal")) +
  theme(legend.position = "bottom") +
  scale_x_continuous(breaks = yrs)

###NEXT BEST STUDIES
##INPUTS TO THE FUNCTION
variables =  c("Exchange", "Market", "Location", "CS_Scale_Items", "CS_Scale_Points", "Retention_Measure")
labels = c("Exchange", "Market", "Location", "CS_Scale_Items", "CS_Scale_Points", "Retention_Measure")
corrvar = "Corr"
naval = "Don't Know"
nstudies_add = 10 #number of next studies
##RUN
eff_next_best = efficiency_next_best_studies(data = data, variables = variables, labels = labels, corrvar = corrvar, naval = naval, nstudies_add = nstudies_add)
eff_next_best_A = as.data.frame(eff_next_best$next_best_studies_A[, -(length(variables) + 1)]) #best next studies based on a-efficiency
eff_next_best_D = as.data.frame(eff_next_best$next_best_studies_D[, -(length(variables) + 1)]) #best next studies based on d-efficiency
eff_next_best_A
eff_next_best_D
